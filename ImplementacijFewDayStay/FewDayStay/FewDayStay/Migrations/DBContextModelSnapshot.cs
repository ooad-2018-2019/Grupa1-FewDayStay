// <auto-generated />
using System;
using FewDayStay.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FewDayStay.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FewDayStay.Models.Iznajmljivanje", b =>
                {
                    b.Property<int>("IznajmljivanjeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisnikID");

                    b.Property<DateTime>("KrajnjiDatum");

                    b.Property<int>("ObjekatID");

                    b.Property<DateTime>("PocetniDatum");

                    b.HasKey("IznajmljivanjeID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("ObjekatID");

                    b.ToTable("Iznajmljivanje");
                });

            modelBuilder.Entity("FewDayStay.Models.Lokacija", b =>
                {
                    b.Property<int>("LokacijaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .IsRequired();

                    b.Property<string>("Drzava")
                        .IsRequired();

                    b.Property<string>("Grad")
                        .IsRequired();

                    b.Property<int>("PostanskiBroj");

                    b.HasKey("LokacijaID");

                    b.ToTable("Lokacija");
                });

            modelBuilder.Entity("FewDayStay.Models.Objekat", b =>
                {
                    b.Property<int>("ObjekatID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojKreveta");

                    b.Property<double>("CijenaPoNoci");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("Kvadratura");

                    b.Property<int>("LokacijaID");

                    b.Property<string>("Naziv")
                        .IsRequired();

                    b.Property<double>("Ocjena");

                    b.Property<int>("VlasnikID");

                    b.HasKey("ObjekatID");

                    b.HasIndex("LokacijaID");

                    b.HasIndex("VlasnikID");

                    b.ToTable("Objekat");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Objekat");
                });

            modelBuilder.Entity("FewDayStay.Models.Osoba", b =>
                {
                    b.Property<int>("OsobaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojTelefona")
                        .IsRequired();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<int>("LokacijaID");

                    b.Property<string>("Naziv")
                        .IsRequired();

                    b.Property<double>("Racun");

                    b.Property<string>("Sifra")
                        .IsRequired();

                    b.HasKey("OsobaID");

                    b.HasIndex("LokacijaID");

                    b.ToTable("Osoba");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Osoba");
                });

            modelBuilder.Entity("FewDayStay.Models.Kuca", b =>
                {
                    b.HasBaseType("FewDayStay.Models.Objekat");

                    b.Property<int>("BrojSpratova");

                    b.Property<bool>("ImaBazen");

                    b.Property<bool>("ImaDvoriste");

                    b.ToTable("Kuca");

                    b.HasDiscriminator().HasValue("Kuca");
                });

            modelBuilder.Entity("FewDayStay.Models.Stan", b =>
                {
                    b.HasBaseType("FewDayStay.Models.Objekat");

                    b.Property<int>("BrojSprata");

                    b.Property<string>("ImeNaUlazu")
                        .IsRequired();

                    b.ToTable("Stan");

                    b.HasDiscriminator().HasValue("Stan");
                });

            modelBuilder.Entity("FewDayStay.Models.Korisnik", b =>
                {
                    b.HasBaseType("FewDayStay.Models.Osoba");


                    b.ToTable("Korisnik");

                    b.HasDiscriminator().HasValue("Korisnik");
                });

            modelBuilder.Entity("FewDayStay.Models.Vlasnik", b =>
                {
                    b.HasBaseType("FewDayStay.Models.Osoba");


                    b.ToTable("Vlasnik");

                    b.HasDiscriminator().HasValue("Vlasnik");
                });

            modelBuilder.Entity("FewDayStay.Models.Iznajmljivanje", b =>
                {
                    b.HasOne("FewDayStay.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FewDayStay.Models.Objekat", "Objekat")
                        .WithMany()
                        .HasForeignKey("ObjekatID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FewDayStay.Models.Objekat", b =>
                {
                    b.HasOne("FewDayStay.Models.Lokacija", "Lokacija")
                        .WithMany()
                        .HasForeignKey("LokacijaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FewDayStay.Models.Vlasnik", "Vlasnik")
                        .WithMany()
                        .HasForeignKey("VlasnikID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FewDayStay.Models.Osoba", b =>
                {
                    b.HasOne("FewDayStay.Models.Lokacija", "Lokacija")
                        .WithMany()
                        .HasForeignKey("LokacijaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
